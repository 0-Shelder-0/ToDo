@using ToDo.Models.CreateEntity
@using ToDo.Models.RemoveEntity
@model ToDo.Models.Board.AllBoardsModel
@{
    ViewData["Title"] = "Boards";
}

<!DOCTYPE html>

<html>
<head>

    <div class="container main-container">
        <div class="row">
            @foreach (var board in Model.Boards)
            {
                <div class="col-sm-3 board">
                    <div class="default-background">
                        <a asp-controller="Board" asp-action="Board" asp-route-id="@board.Id">
                            <div class="board-container text-center d-flex board-thumbnail" style="background-image: url(@Context.Request.Scheme://@Context.Request.Host/@board.ThumbnailPath)">
                                <div class="flex-grow-1 board-name unselectable">
                                    @board.Name
                                </div>

                                @{ await Html.RenderPartialAsync("_RemoveBoardPartial",
                                                                 new RemoveBoardModel {BoardId = board.Id}); }

                            </div>
                        </a>
                    </div>
                </div>
            }
            <div class="col-sm-3">
                @{ await Html.RenderPartialAsync("_CreateBoardPartial", new CreateBoardModel()); }
            </div>
        </div>
    </div>

</head>
<body>
<div>

</div>
</body>
<script src="~/js/plugin-autoresize.js" asp-append-version="true"></script>
</html>